import { useEffect, useState } from "react";
import "./DalleImage.css";

function DalleImage({ storyPrompt }) {
  const [imageUrl, setImageUrl] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    async function fetchImage() {
      if (!storyPrompt) return; // Don't fetch if no prompt is provided
      setIsLoading(true); // Set loading state

      try {
        // Replace this with your DALL-E or equivalent API endpoint
        const response = await fetch(
          "https://api.openai.com/v1/images/generations",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${import.meta.env.VITE_OPENAI_API_KEY}`, // Use your API key
            },
            body: JSON.stringify({
              prompt: storyPrompt, // Send the story prompt as input
              n: 1, // Number of images to generate
              size: "512x512", // Set the desired image size
            }),
          }
        );

        const data = await response.json();
        if (data && data.data && data.data.length > 0) {
          setImageUrl(data.data[0].url); // Get the generated image URL
        } else {
          console.error("Image generation failed:", data);
        }
      } catch (error) {
        console.error("Error fetching image:", error);
      } finally {
        setIsLoading(false); // Clear loading state
      }
    }

    fetchImage();
  }, [storyPrompt]);

  return (
    <div className="dalle-image">
      {isLoading ? (
        <p>Loading image...</p> // Show loading feedback
      ) : imageUrl ? (
        <img src={imageUrl} alt="Generated by DALL-E" />
      ) : (
        <p>No image generated yet</p> // Default message when no image is loaded
      )}
    </div>
  );
}

export default DalleImage;
